(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{153:function(e,a,t){"use strict";t.d(a,"a",(function(){return p})),t.d(a,"b",(function(){return m}));var n=t(0),r=t.n(n);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=r.a.createContext({}),d=function(e){var a=r.a.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):l({},a,{},e)),t},p=function(e){var a=d(e.components);return r.a.createElement(c.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.a.createElement(r.a.Fragment,{},a)}},b=Object(n.forwardRef)((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(t),b=n,m=p["".concat(i,".").concat(b)]||p[b]||u[b]||o;return t?r.a.createElement(m,l({ref:a},c,{components:t})):r.a.createElement(m,l({ref:a},c))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=b;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},81:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return i})),t.d(a,"metadata",(function(){return l})),t.d(a,"rightToc",(function(){return s})),t.d(a,"default",(function(){return d}));var n=t(1),r=t(6),o=(t(0),t(153)),i={id:"add-signal",title:"Add a Time-Series (Signal) to your Amphora",sidebar_label:"Share Time-Series"},l={unversionedId:"share_data/add-signal",id:"share_data/add-signal",isDocsHomePage:!1,title:"Add a Time-Series (Signal) to your Amphora",description:"Amphoras are standardised data containers. To share your data, you need to create an Amphora then fill it with whatever data you want.",source:"@site/docs/share_data/add-signal.md",permalink:"/docs/share_data/add-signal",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/share_data/add-signal.md",sidebar_label:"Share Time-Series",sidebar:"someSidebar",previous:{title:"Add File to Amphora",permalink:"/docs/share_data/add-file"},next:{title:"Share Amphora through email",permalink:"/docs/share_data/email-amphora"}},s=[{value:"Add Signal on web app",id:"add-signal-on-web-app",children:[]},{value:"Add Signal programmatically",id:"add-signal-programmatically",children:[]}],c={rightToc:s};function d(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Amphoras are standardised data containers. To share your data, you need to create an Amphora then fill it with whatever data you want."),Object(o.b)("h2",{id:"add-signal-on-web-app"},"Add Signal on web app"),Object(o.b)("p",null,"Signals are numeric data that change over time. Add a signal by clicking ",Object(o.b)("inlineCode",{parentName:"p"},"New Signal")," and specify the property (i.e. the name of the signal), e.g. temperature."),Object(o.b)("p",null,Object(o.b)("img",Object(n.a)({parentName:"p"},{src:"/img/add_signal_amphora.png",alt:"Add signal amphora"}))),Object(o.b)("p",null,"Now you can submit a value for that signal (e.g. the current temperature) via the ",Object(o.b)("inlineCode",{parentName:"p"},"New Values")," button. Once submitted, you'll start seeing data on the graph."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"It may take up to a minute for the new value to be processed and to show on the graph.")),Object(o.b)("h2",{id:"add-signal-programmatically"},"Add Signal programmatically"),Object(o.b)("p",null,"There are two steps to adding a signal. You first need to add the Signal object then add data to the object."),Object(o.b)("h4",{id:"python"},"Python"),Object(o.b)("p",null,"The basic code for creating the signal is"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'amphora.create_signal("signal_name", attributes={"units":"XYZ"})\n')),Object(o.b)("p",null,"and the basic code for updating a signal is"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),"amphora.push_signals_dict_array(Signals)\n")),Object(o.b)("p",null,"You can get started adding and updating Signals with the code"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-py"}),'# Import Amphora modules\nfrom amphora.client import AmphoraDataRepositoryClient, Credentials\n\n# Import non-Amphora modules\nimport os\n\n# Login to amphoradata.com\ncredentials = Credentials(username=os.getenv(\'username\'), password=os.getenv(\'password\'))\nclient = AmphoraDataRepositoryClient(credentials)\n\n# Create signal object. Update as often as you wish\nSignals = [dict(t = datetime_value, signal_name = signal_value)]\n\n# Get Amphora object\namphora = client.get_amphora(Amphora_id)\n\n# Create signal\namphora.create_signal("signal_name", attributes={"units":"XYZ"})\n\n# Create update signal\namphora.push_signals_dict_array(Signals)\n')),Object(o.b)("p",null,"You can download this code from ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/amphoradata/samples/blob/master/generic_templates/Create_a_Signal.py"}),"GitHub"),". There is also more detailed docs in the Python SDK section. There is also a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.youtube.com/watch?v=M6kW4Po1LmY"}),"tutorial video")," you can watch too."),Object(o.b)("h4",{id:"c"},"C#"),Object(o.b)("p",null,"Code for pulling signals can be found on ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/amphoradata/dotnet-sdk/tree/master/sample"}),"GitHub"),". We are expanding our docs for C# so stay tuned for more details."),Object(o.b)("h4",{id:"nodejs"},"Node.js"),Object(o.b)("p",null,"Code for pulling signals can be found on ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/amphoradata/nodejs-sdk/tree/master/samples"}),"GitHub"),". We are expanding our docs for Node.js so stay tuned for more details."))}d.isMDXComponent=!0}}]);